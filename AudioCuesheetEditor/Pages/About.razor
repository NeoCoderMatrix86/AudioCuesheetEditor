<!--
This file is part of AudioCuesheetEditor.

AudioCuesheetEditor is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

AudioCuesheetEditor is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with Foobar.  If not, see
<http: //www.gnu.org/licenses />.
-->

@page "/about"
@inject HttpClient Http
@inject IStringLocalizer<Localization> localizer

<Layout>
    <LayoutContent Margin="Margin.Is2">
        <Heading Size="HeadingSize.Is1">@localizer["AboutAudioCuesheetEditor"]</Heading>
        <Heading Size="HeadingSize.Is3">@localizer["Version"] : @VersionString</Heading>
        <Paragraph>@((MarkupString)localizer["WrittenBy"].Value)</Paragraph>
        <Blazorise.Link To="https://www.paypal.com/donate/?cmd=_donations&business=sbbaus%40web%2ede&lc=DE&item_name=Cuesheet%20Project&no_note=0&currency_code=EUR&bn=PP%2dDonationsBF%3abtn_donateCC_LG%2egif%3aNonHostedGuest" Target="Target.Blank">@localizer["DonateForThisProject"]</Blazorise.Link>
        <br />
        <br />
        <Blazorise.Link To="https://github.com/NeoCoderMatrix86/AudioCuesheetEditor" Target="Target.Blank">https://github.com/NeoCoderMatrix86/AudioCuesheetEditor</Blazorise.Link>
        <br />
        <br />
        <Heading Size="HeadingSize.Is3">@localizer["Licence"]</Heading>
        <Paragraph>@((MarkupString)licence)</Paragraph>
    </LayoutContent>
</Layout>

@code {

    private String licence;

    protected override async Task OnInitializedAsync()
    {
        licence = (await Http.GetStringAsync("Licence.txt")).Replace(Environment.NewLine, "<br />");
    }

    public String VersionString
    {
        get
        {
            var version = System.Reflection.Assembly.GetExecutingAssembly().GetCustomAttributes(typeof(System.Reflection.AssemblyInformationalVersionAttribute), false).First();
            if ((version != null) && (version is System.Reflection.AssemblyInformationalVersionAttribute))
            {
                return ((System.Reflection.AssemblyInformationalVersionAttribute)version).InformationalVersion;
            }
            return null;
        }
    }
}
