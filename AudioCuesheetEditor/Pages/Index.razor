<!--
This file is part of AudioCuesheetEditor.

AudioCuesheetEditor is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

AudioCuesheetEditor is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with Foobar.  If not, see
<http: //www.gnu.org/licenses />.
-->

@page "/"
@inject IJSRuntime JSRuntime
@inject IBlazorDownloadFileService BlazorDownloadFileService
@inject IStringLocalizer<Localization> localizer
@inject CuesheetController cuesheetController

<!--TODO: Werkzeugleiste-->
<!--TODO: Drag & Drop Dateien (und automatische Auswertung des ganzen)-->

<Accordion>
    <Collapse Visible="@cuesheetDataVisible">
        <CollapseHeader>
            <Blazorise.Link Clicked="CuesheetDataHeaderClicked" Style="justify-content: space-between;display: flex;-webkit-box-pack:justify;">
                <h3>@localizer["CuesheetData"]</h3>
                <div>
                    @((MarkupString)chevronCuesheetData)
                </div>
            </Blazorise.Link>
        </CollapseHeader>
        <CollapseBody>
            <div class="input-group mb-3">
                <div class="input-group-prepend">
                    <span class="input-group-text" id="cdTitleLabel">@localizer["CDTitle"]</span>
                </div>
                <input type="text" class="form-control" id="cdTitle" aria-label="CD Title" aria-describedby="cdTitleLabel" placeholder="@localizer["EnterCDtitlehere"]" @bind="@cuesheet.Title">
            </div>
            <div class="input-group mb-3">
                <div class="input-group-prepend">
                    <span class="input-group-text" id="cdArtistLabel">@localizer["CDArtist"]</span>
                </div>
                <input type="text" class="form-control" id="cdArtist" aria-label="CD Artist" aria-describedby="cdTitleLabel" placeholder="@localizer["EnterCDartisthere"]" @bind="@cuesheet.Artist">
            </div>
            <div class="input-group mb-3">
                <div class="input-group-prepend">
                    <span class="input-group-text" id="cdAudioFileLabel">@localizer["Audiofile"]</span>
                </div>
                <input type="file" class="form-control" id="cdAudioFile" accept="audio/*" aria-label="Audiofile" aria-describedby="cdAudioFileLabel" placeholder="@localizer["Enteraudiofilehere"]" onchange="audioFileChanged(this)">
            </div>
        </CollapseBody>
    </Collapse>
    <!--TODO: Cuesheet Validation Errors-->

    <!--TODO-->
    @*<Collapse Visible="@cuesheetOptionalInfoVisible">
            <CollapseHeader>
                <Blazorise.Link Clicked="CuesheetOptionalInfoHeaderClicked" Style="justify-content: space-between;display: flex;-webkit-box-pack:justify;">
                    <h3>Cuesheet optional Information</h3>
                    <div>
                        @((MarkupString)chevronCuesheetOptionalInfo)
                    </div>
                </Blazorise.Link>
            </CollapseHeader>
            <CollapseBody>
                <div class="input-group mb-3">
                    <div class="input-group-prepend">
                        <span class="input-group-text" id="cdTextFileLabel">CD Textfile</span>
                    </div>
                    <input type="file" class="form-control" id="cdTextFile" accept="text/plain" aria-label="CD Textfile" aria-describedby="cdTextFileLabel" placeholder="Enter CD textfile here">
                </div>
                <div class="input-group mb-3">
                    <div class="input-group-prepend">
                        <span class="input-group-text" id="cdCatalogueNumberLabel">CD Cataloguenumber</span>
                    </div>
                    <input type="text" class="form-control" id="cdCatalogueNumber" aria-label="CD Cataloguenumber" aria-describedby="cdCatalogueNumberLabel" placeholder="Enter CD cataloguenumber here">
                </div>
            </CollapseBody>
        </Collapse>*@
    <Collapse Visible="@cuesheetTracksVisible">
        <CollapseHeader>
            <Blazorise.Link Clicked="CuesheetTracksHeaderClicked" Style="justify-content: space-between;display: flex;-webkit-box-pack:justify;">
                <h3>@localizer["CuesheetTracks"]</h3>
                <div>
                    @((MarkupString)chevronCuesheetTracks)
                </div>
            </Blazorise.Link>
        </CollapseHeader>
        <CollapseBody>
            <div class="table-responsive-md">
                <table class="table table-bordered">
                    <thead>
                        <tr class="thead-light">
                            <th>#</th>
                            <th>@localizer["Artist"]</th>
                            <th>@localizer["Title"]</th>
                            <th>@localizer["Begin"]</th>
                            <th>@localizer["End"]</th>
                            <th>@localizer["Length"]</th>
                            <th>@localizer["Warning"]</th>
                        </tr>
                        @foreach (var track in cuesheet.Tracks)
                        {
                            <tr>
                                <!--TODO-->
                                <td>@track.Position</td>
                                <td><input type="text" class="form-control" @bind="@track.Artist" /></td>
                                <td><input type="text" class="form-control" @bind="@track.Title" /></td>
                                <td><input type="text" class="form-control" @bind="@track.Begin" /></td>
                                <td><input type="text" class="form-control" @bind="@track.End" /></td>
                                <td><input type="text" class="form-control" @bind="@track.Length" /></td>
                                <td>@((MarkupString)track.GetValidationErrors())</td>
                            </tr>
                        }
                    </thead>
                    <!--TODO: Tracks, Buttons, etc. -->
                </table>
            </div>
            <button class="btn btn-primary" @onclick="AddTrackClicked">@localizer["Addnewtrack"]</button>
        </CollapseBody>
    </Collapse>
</Accordion>

<br />

<button Class="btn btn-primary" @onclick="DownloadCuesheetFileClicked">@localizer["Downloadcuesheet"]</button>


@code {
    private Boolean cuesheetDataVisible = true;
    private Boolean cuesheetOptionalInfoVisible = false;
    private Boolean cuesheetTracksVisible = true;
    private String chevronCuesheetData = "<svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" class=\"bi bi-chevron-up\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path fill-rule=\"evenodd\" d=\"M7.646 4.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1-.708.708L8 5.707l-5.646 5.647a.5.5 0 0 1-.708-.708l6-6z\"/></svg>";
    private String chevronCuesheetOptionalInfo = "<svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" class=\"bi bi-chevron-down\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path fill-rule=\"evenodd\" d=\"M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z\" /></svg>";
    private String chevronCuesheetTracks = "<svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" class=\"bi bi-chevron-up\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path fill-rule=\"evenodd\" d=\"M7.646 4.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1-.708.708L8 5.707l-5.646 5.647a.5.5 0 0 1-.708-.708l6-6z\"/></svg>";

    private Cuesheet cuesheet;

    protected override Task OnInitializedAsync()
    {
        cuesheet = cuesheetController.Cuesheet;

        var dotNetReference = DotNetObjectReference.Create(this);
        JSRuntime.InvokeVoidAsync("GLOBAL.SetDotNetReference", dotNetReference);

        //TODO: DEBUG Only for Design purpose
        //cuesheet.Artist = "Demo Artist";
        //cuesheet.Title = "Demo Title";
        //var begin = TimeSpan.Zero;
        //for (uint i = 1; i < 25; i++)
        //{
        //    var track = cuesheetController.NewTrack();
        //    track.Artist = String.Format("Demo Track Artist {0}", i);
        //    track.Title = String.Format("Demo Track Title {0}", i);
        //    track.Begin = begin;
        //    begin = begin.Add(new TimeSpan(0, (int)i, (int)i));
        //    track.End = begin;
        //    cuesheet.AddTrack(track);
        //}
        //DEBUG
        return base.OnInitializedAsync();
    }

    private void CuesheetDataHeaderClicked()
    {
        cuesheetDataVisible = !cuesheetDataVisible;
        SwitchChevron(cuesheetDataVisible, ref chevronCuesheetData);
    }

    private void CuesheetOptionalInfoHeaderClicked()
    {
        cuesheetOptionalInfoVisible = !cuesheetOptionalInfoVisible;
        SwitchChevron(cuesheetOptionalInfoVisible, ref chevronCuesheetOptionalInfo);
    }

    private void CuesheetTracksHeaderClicked()
    {
        cuesheetTracksVisible = !cuesheetTracksVisible;
        SwitchChevron(cuesheetTracksVisible, ref chevronCuesheetTracks);
    }

    private void SwitchChevron(Boolean chevronUp, ref String chevron)
    {
        if (chevronUp == true)
        {
            chevron = "<svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" class=\"bi bi-chevron-up\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path fill-rule=\"evenodd\" d=\"M7.646 4.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1-.708.708L8 5.707l-5.646 5.647a.5.5 0 0 1-.708-.708l6-6z\"/></svg>";
        }
        else
        {
            chevron = "<svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" class=\"bi bi-chevron-down\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path fill-rule=\"evenodd\" d=\"M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z\" /></svg>";
        }
    }

    private void AddTrackClicked()
    {
        cuesheet.AddTrack(cuesheetController.NewTrack());
    }

    private void DownloadCuesheetFileClicked()
    {
        var cuesheetFile = new CuesheetFile(cuesheet);
        var fileData = cuesheetFile.GenerateCuesheetFile();
        BlazorDownloadFileService.DownloadFile(CuesheetFile.DefaultFileName, fileData, "text/plain");
    }

    [JSInvokable()]
    public void AudioFileChanged(String fileName)
    {
        if (String.IsNullOrEmpty(fileName) == false)
        {
            cuesheet.AudioFile = new AudioFile(fileName);
        }
        else
        {
            cuesheet.AudioFile = null;
        }
    }
}