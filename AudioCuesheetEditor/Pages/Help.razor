<!--
This file is part of AudioCuesheetEditor.

AudioCuesheetEditor is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

AudioCuesheetEditor is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with Foobar.  If not, see
<http: //www.gnu.org/licenses />.
-->

@page "/Help"

@implements IDisposable

@inject ITextLocalizer<Help> _localizer
@inject ITextLocalizerService _localizationService

<Layout>
    <LayoutContent Margin="Margin.Is2">
        <Heading Size="HeadingSize.Is1">@_localizer["Help"]</Heading>
        <Heading Size="HeadingSize.Is5">@_localizer["Quick links"]</Heading>
        <Blazorise.Link To="#headingIntroduction">@_localizer["Introduction"]</Blazorise.Link>
        <br />
        <Blazorise.Link To="#whatIsAudioCuesheetEditor">@_localizer["What is AudioCuesheetEditor"]</Blazorise.Link>
        <br />
        <Blazorise.Link To="#features">@_localizer["Features"]</Blazorise.Link>
        <br />
        <Blazorise.Link To="#validation">@_localizer["Validation"]</Blazorise.Link>
        <br />
        <Blazorise.Link To="#trackLinking">@_localizer["Track linking"]</Blazorise.Link>
        <br />
        <Blazorise.Link To="#headingCreateCuesheet">@_localizer["Create cuesheet"]</Blazorise.Link>
        <br />
        <Blazorise.Link To="#headingImportOfFiles">@_localizer["Import of files"]</Blazorise.Link>
        <br />
        <Blazorise.Link To="#importOfTextFiles">@_localizer["Import of textfiles"]</Blazorise.Link>
        <br />
        <Blazorise.Link To="#importOfCuesheetFiles">@_localizer["Import of cuesheetfiles"]</Blazorise.Link>
        <br />
        <Blazorise.Link To="#headingExportOfData">@_localizer["Export of data"]</Blazorise.Link>
        <br />
        <Blazorise.Link To="#headingRecordMode">@_localizer["Recordmode"]</Blazorise.Link>
        <br />
        <Blazorise.Link To="#headingOptions">@_localizer["Options"]</Blazorise.Link>
        <br />

        <Heading id="headingIntroduction" Size="HeadingSize.Is2">
            @_localizer["Introduction"]
            <Blazorise.Link To="/Help">@_localizer["Scroll to top"]</Blazorise.Link>
        </Heading>
        <Heading id="whatIsAudioCuesheetEditor" Size="HeadingSize.Is3">
            @_localizer["What is AudioCuesheetEditor"]
            <Blazorise.Link To="/Help">@_localizer["Scroll to top"]</Blazorise.Link>
        </Heading>
        @((MarkupString)_localizer["What is AudioCuesheetEditor helptext"])
        <Heading id="features" Size="HeadingSize.Is3">
            @_localizer["Features"]
            <Blazorise.Link To="/Help">@_localizer["Scroll to top"]</Blazorise.Link>
        </Heading>
        @((MarkupString)_localizer["Features helptext"])
        <Heading id="validation" Size="HeadingSize.Is3">
            @_localizer["Validation"]
            <Blazorise.Link To="/Help">@_localizer["Scroll to top"]</Blazorise.Link>
        </Heading>
        @((MarkupString)_localizer["Validation helptext"])
        <Heading id="trackLinking" Size="HeadingSize.Is3">
            @_localizer["Track linking"]
            <Blazorise.Link To="/Help">@_localizer["Scroll to top"]</Blazorise.Link>
        </Heading>
        @((MarkupString)_localizer["Track linking helptext"])
        <Heading id="headingCreateCuesheet" Size="HeadingSize.Is2">
            @_localizer["Create cuesheet"]
            <Blazorise.Link To="/Help">@_localizer["Scroll to top"]</Blazorise.Link>
        </Heading>
        @((MarkupString)_localizer["Create cuesheet helptext"])
        <Heading id="headingImportOfFiles" Size="HeadingSize.Is2">
            @_localizer["Import of files"]
            <Blazorise.Link To="/Help">@_localizer["Scroll to top"]</Blazorise.Link>
        </Heading>
        <Heading id="importOfTextFiles" Size="HeadingSize.Is3">
            @_localizer["Import of textfiles"]
            <Blazorise.Link To="/Help">@_localizer["Scroll to top"]</Blazorise.Link>
        </Heading>
        @((MarkupString)_localizer["Import of textfiles helptext"])
        <Heading id="importOfCuesheetFiles" Size="HeadingSize.Is3">
            @_localizer["Import of cuesheetfiles"]
            <Blazorise.Link To="/Help">@_localizer["Scroll to top"]</Blazorise.Link>
        </Heading>
        @((MarkupString)_localizer["Import of cuesheetfiles helptext"])
        <Heading id="headingExportOfData" Size="HeadingSize.Is2">
            @_localizer["Export of data"]
            <Blazorise.Link To="/Help">@_localizer["Scroll to top"]</Blazorise.Link>
        </Heading>
        @((MarkupString)_localizer["Export of data helptext"])
        <Heading id="headingRecordMode" Size="HeadingSize.Is2">
            @_localizer["Recordmode"]
            <Blazorise.Link To="/Help">@_localizer["Scroll to top"]</Blazorise.Link>
        </Heading>
        @((MarkupString)_localizer["Recordmode helptext"])
        <Heading id="headingOptions" Size="HeadingSize.Is2">
            @_localizer["Options"]
            <Blazorise.Link To="/Help">@_localizer["Scroll to top"]</Blazorise.Link>
        </Heading>
        @((MarkupString)_localizer["Options helptext"])
    </LayoutContent>
</Layout>

@code {
    [CascadingParameter]
    public MainLayout? mainLayout { get; set; }

    public void Dispose()
    {
        _localizationService.LocalizationChanged -= LocalizationService_LocalizationChanged;
    }

    protected override Task OnInitializedAsync()
    {
        _localizationService.LocalizationChanged += LocalizationService_LocalizationChanged;

        return base.OnInitializedAsync();
    }

    protected override async Task OnParametersSetAsync()
    {
        await base.OnParametersSetAsync();
        if (mainLayout != null)
        {
            mainLayout.SetDisplayMenuBar(false);
        }
    }

    private void LocalizationService_LocalizationChanged(object? sender, EventArgs args)
    {
        StateHasChanged();
    }
}