<!--
This file is part of AudioCuesheetEditor.

AudioCuesheetEditor is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

AudioCuesheetEditor is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with Foobar.  If not, see
<http: //www.gnu.org/licenses />.
-->
@inherits BaseLocalizedComponent

@inject IStringLocalizer<OptionsDialog> _localizer

<MudDialog>
    <TitleContent>
        <MudText Typo="Typo.h5">@_localizer["Options"]</MudText>
    </TitleContent>
    <DialogContent>
        <MudTabs Color="Color.Info" Rounded>
            <MudTabPanel Text="@_localizer["Common"]" Icon="@Icons.Material.Outlined.Settings">
                <MudText Typo="Typo.h6">@_localizer["Input"]</MudText>
                <MudSwitch T="Boolean?" Value="ApplicationOptions?.LinkTracks" ValueChanged="(newValue) => LocalStorageOptionsProvider.SaveOptionsValue<ApplicationOptions>(x => x.LinkTracks, newValue)" Label="@_localizer["Automatically link tracks"]" Color="Color.Primary" />
                <MudStack Row AlignItems="AlignItems.Baseline">
                    <MudTextField T="string" @ref="timeInputFormatTextField" Label="@_localizer["Time input format"]" Text="@ApplicationOptions?.TimeSpanFormat?.Scheme" TextChanged="TimeInputFormatChangedAsync" Clearable />
                    <MudMenu Label="@_localizer["Add placeholder"]" Color="Color.Primary" Variant="Variant.Filled" EndIcon="@Icons.Material.Outlined.KeyboardArrowDown">
                        @foreach(var scheme in TimeSpanFormat.AvailableTimespanScheme)
                        {
                            <MudMenuItem OnClick="() => AppendPlaceholderToTimeInputFormatTextField(scheme)">@_localizer[scheme]</MudMenuItem>
                        }
                    </MudMenu>
                </MudStack>
            </MudTabPanel>
        </MudTabs>
    </DialogContent>
</MudDialog>

@code {
    //TODO: Develop the options dialog
    //TODO: Localize
    //TODO: Add record options
    //TODO: Validation for timespan format input
    //TODO: Add option how time spans are displayed
    MudTextField<string>? timeInputFormatTextField;

    async Task TimeInputFormatChangedAsync(string newValue)
    {
        TimeSpanFormat? timeSpanFormat = ApplicationOptions?.TimeSpanFormat;
        if (string.IsNullOrEmpty(newValue))
        {
            timeSpanFormat = null;
        }
        else
        {
            if (timeSpanFormat == null)
            {
                timeSpanFormat = new();
            }
            timeSpanFormat.Scheme = newValue;
        }
        await LocalStorageOptionsProvider.SaveOptionsValue<ApplicationOptions>(x => x.TimeSpanFormat!, timeSpanFormat);
    }

    void AppendPlaceholderToTimeInputFormatTextField(string placeholder)
    {
        timeInputFormatTextField?.SetText($"{timeInputFormatTextField.Text}{placeholder}");
    }
}
