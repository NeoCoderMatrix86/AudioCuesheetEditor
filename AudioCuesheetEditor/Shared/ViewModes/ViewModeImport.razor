<!--
This file is part of AudioCuesheetEditor.

AudioCuesheetEditor is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

AudioCuesheetEditor is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with Foobar.  If not, see
<http: //www.gnu.org/licenses />.
-->
@inherits BaseLocalizedComponent

@inject IStringLocalizer<ViewModeImport> _localizer
@inject SessionStateContainer _sessionStateContainer
@inject ImportManager _importManager

<CascadingValue Value="ViewMode.ImportView">
    <MudExpansionPanels MultiExpansion>
        <MudExpansionPanel @bind-Expanded="inputfilesExpanded">
            <TitleContent>
                <MudText Typo="Typo.h5">@_localizer["Inputfiles"]</MudText>
            </TitleContent>
            <ChildContent>
                <SelectImportFiles FilesImported="FilesImported" />
            </ChildContent>
        </MudExpansionPanel>
        <MudExpansionPanel @bind-Expanded="filecontentExpanded" Disabled="filecontentDisabled">
            <TitleContent>
                <MudText Typo="Typo.h5">@_localizer["Filecontent"]</MudText>
            </TitleContent>
            <ChildContent>
                <ImportFileContent FileContentChanged="ImportFileContent_FileContentChanged" />
                <ImportSchemes ImportSchemeCuesheetChanged="ReanalyseImportfile" ImportSchemeTracksChanged="ReanalyseImportfile" ImportTimeInputFormatChanged="ReanalyseImportfile" />
                @if (_sessionStateContainer.Importfile?.AnalyseException != null)
                {
                    <MudAlert Severity="Severity.Error" Variant="Variant.Filled">
                        @_localizer["Error during textimport"] : @_sessionStateContainer.Importfile.AnalyseException.Message
                    </MudAlert>
                }
            </ChildContent>
        </MudExpansionPanel>
        <MudExpansionPanel @bind-Expanded="cuesheetDataExpanded" Disabled="cuesheetDataDisabled">
            <TitleContent>
                <MudText Typo="Typo.h5">@_localizer["Common data"]</MudText>
            </TitleContent>
            <ChildContent>
                <CuesheetData />
            </ChildContent>
        </MudExpansionPanel>
        <MudExpansionPanel @bind-Expanded="cuesheetTracksExpanded" Disabled="cuesheetTracksDisabled">
            <TitleContent>
                <MudText Typo="Typo.h5">@_localizer["Tracks"]</MudText>
            </TitleContent>
            <ChildContent>
                <TrackList />
            </ChildContent>
        </MudExpansionPanel>
    </MudExpansionPanels>
</CascadingValue>

@code {
    //TODO
    //TODO: Localization
    //TODO: Control navigation (seeing the selected files, completing import, etc.)
    //TODO: Bug: Save activestep while switching view modes (going to Fullmode and back results in restarting the import)
    Boolean inputfilesExpanded = true, filecontentExpanded = false, cuesheetDataExpanded = false, cuesheetTracksExpanded = false;
    Boolean filecontentDisabled = true, cuesheetDataDisabled = true, cuesheetTracksDisabled = true;

    void ImportFileContent_FileContentChanged(string newFileContent)
    {
        var textToAnalyse = newFileContent.Split(Environment.NewLine);
        _importManager.ImportText(textToAnalyse, ApplicationOptions!.ImportScheme, ApplicationOptions!.ImportTimeSpanFormat);
    }

    void ReanalyseImportfile()
    {
        var fileContent = _sessionStateContainer.Importfile?.FileContent;
        if (fileContent != null)
        {
            _importManager.ImportText(fileContent, ApplicationOptions!.ImportScheme, ApplicationOptions.ImportTimeSpanFormat);
        }
    }

    void FilesImported(Dictionary<IBrowserFile, ImportFileType> files)
    {
        inputfilesExpanded = false;
        filecontentExpanded = true;
        cuesheetDataExpanded = true;
        cuesheetTracksExpanded = true;
        filecontentDisabled = false;
        cuesheetDataDisabled = false;
        cuesheetTracksDisabled = false;
    }
}
