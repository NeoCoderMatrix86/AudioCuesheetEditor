<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Abort" xml:space="preserve">
    <value>Abort</value>
  </data>
  <data name="About" xml:space="preserve">
    <value>About</value>
  </data>
  <data name="AboutAudioCuesheetEditor" xml:space="preserve">
    <value>About AudioCuesheetEditor</value>
  </data>
  <data name="AddIdentifierToImportScheme" xml:space="preserve">
    <value>Add identifier to import scheme</value>
  </data>
  <data name="AddNewExportProfile" xml:space="preserve">
    <value>Add new export profile</value>
  </data>
  <data name="Addnewtrack" xml:space="preserve">
    <value>Add new track</value>
  </data>
  <data name="AddPlaceholderToExportSchemeFooter" xml:space="preserve">
    <value>Add placeholder to the export footer scheme</value>
  </data>
  <data name="AddPlaceholderToExportSchemeHead" xml:space="preserve">
    <value>Add placeholder to the export head scheme</value>
  </data>
  <data name="AddPlaceholderToExportSchemeTrack" xml:space="preserve">
    <value>Add placeholder to the export track scheme</value>
  </data>
  <data name="Artist" xml:space="preserve">
    <value>Artist</value>
  </data>
  <data name="AudioFile" xml:space="preserve">
    <value>Audiofile</value>
  </data>
  <data name="AudioPlayer" xml:space="preserve">
    <value>Audio player</value>
  </data>
  <data name="Begin" xml:space="preserve">
    <value>Begin</value>
  </data>
  <data name="CDArtist" xml:space="preserve">
    <value>CD artist</value>
  </data>
  <data name="CDTitle" xml:space="preserve">
    <value>CD title</value>
  </data>
  <data name="Change" xml:space="preserve">
    <value>Change</value>
  </data>
  <data name="ChooseFileOrDrag" xml:space="preserve">
    <value>&lt;strong&gt;Choose files&lt;/strong&gt;&lt;span&gt; or drag them here&lt;/span&gt;</value>
  </data>
  <data name="Close" xml:space="preserve">
    <value>Close</value>
  </data>
  <data name="Confirm" xml:space="preserve">
    <value>Confirm</value>
  </data>
  <data name="ConfirmDeleteOfAllTracks" xml:space="preserve">
    <value>Do you really want to delete all tracks? This can not be reversed.</value>
  </data>
  <data name="ConfirmImportCuesheet" xml:space="preserve">
    <value>Do you really want to import this file? This can not be reversed and unsaved changes are lost!</value>
  </data>
  <data name="ConfirmRequired" xml:space="preserve">
    <value>Confirmation required</value>
  </data>
  <data name="ConfirmResetCuesheet" xml:space="preserve">
    <value>Do you really want to reset the cuesheet? This can not be reversed.</value>
  </data>
  <data name="ConfirmRestartOfApplication" xml:space="preserve">
    <value>Please confirm, that you want to restart the whole application. All data will be lost if not saved before!</value>
  </data>
  <data name="CreateCuesheet" xml:space="preserve">
    <value>Create a Cuesheet</value>
  </data>
  <data name="CuesheetData" xml:space="preserve">
    <value>Cuesheet data</value>
  </data>
  <data name="CuesheetResult" xml:space="preserve">
    <value>Cuesheet result</value>
  </data>
  <data name="CuesheetTracks" xml:space="preserve">
    <value>Cuesheet tracks</value>
  </data>
  <data name="CultureSetting" xml:space="preserve">
    <value>Language:</value>
  </data>
  <data name="CurrentTrackIsPlayed" xml:space="preserve">
    <value>This track is played</value>
  </data>
  <data name="Decline" xml:space="preserve">
    <value>Decline</value>
  </data>
  <data name="DeleteAllTracks" xml:space="preserve">
    <value>Delete all tracks</value>
  </data>
  <data name="DeleteExportProfile" xml:space="preserve">
    <value>Delete current export profile</value>
  </data>
  <data name="DeleteTrackTooltip" xml:space="preserve">
    <value>Delete this track</value>
  </data>
  <data name="DescribeHowTheErrorOccured" xml:space="preserve">
    <value>Please describe how the error occured:
1.What were you trying to do?
2.Does this error occure, if you try it again?</value>
  </data>
  <data name="DonateForThisProject" xml:space="preserve">
    <value>Donate for this project</value>
  </data>
  <data name="Downloadcuesheet" xml:space="preserve">
    <value>Download cuesheet file</value>
  </data>
  <data name="DownloadExport" xml:space="preserve">
    <value>Download export file</value>
  </data>
  <data name="DropFiles" xml:space="preserve">
    <value>Drop input files here</value>
  </data>
  <data name="End" xml:space="preserve">
    <value>End</value>
  </data>
  <data name="Enteraudiofilehere" xml:space="preserve">
    <value>Enter audiofile here</value>
  </data>
  <data name="EnterCDartisthere" xml:space="preserve">
    <value>Enter CD artist here</value>
  </data>
  <data name="EnterCDtitlehere" xml:space="preserve">
    <value>Enter CD title here</value>
  </data>
  <data name="EnterExportProfileFilenameHere" xml:space="preserve">
    <value>Enter name of file for export profile here</value>
  </data>
  <data name="EnterExportProfileNameHere" xml:space="preserve">
    <value>Enter name of export profile here</value>
  </data>
  <data name="EnterExportSchemeFooterHere" xml:space="preserve">
    <value>Enter scheme for export of footer here</value>
  </data>
  <data name="EnterExportSchemeFooterHereTooltip" xml:space="preserve">
    <value>Enter scheme for export of footer here. Each placeholder will be replaced by the placeholder value. Placeholder start and end with %.</value>
  </data>
  <data name="EnterExportSchemeHeadHere" xml:space="preserve">
    <value>Enter scheme for export of header here</value>
  </data>
  <data name="EnterExportSchemeHeadHereTooltip" xml:space="preserve">
    <value>Enter scheme for export of header here. Each placeholder will be replaced by the placeholder value. Placeholder start and end with %.</value>
  </data>
  <data name="EnterExportSchemeTrackHere" xml:space="preserve">
    <value>Enter scheme for export of tracks here</value>
  </data>
  <data name="EnterExportSchemeTrackHereTooltip" xml:space="preserve">
    <value>Enter scheme for export of tracks here. Each placeholder will be replaced by the placeholder value. Placeholder start and end with %.</value>
  </data>
  <data name="EnterTextImportSchemeHere" xml:space="preserve">
    <value>Enter textscheme for import here</value>
  </data>
  <data name="EnterTextImportSchemeTooltip" xml:space="preserve">
    <value>Enter textscheme for import here. Identification will be done using regular expressions.</value>
  </data>
  <data name="ErrorDuringTextImport" xml:space="preserve">
    <value>An error occured during text import</value>
  </data>
  <data name="ErrorReport" xml:space="preserve">
    <value>Error report</value>
  </data>
  <data name="Errors" xml:space="preserve">
    <value>Errors</value>
  </data>
  <data name="Exception" xml:space="preserve">
    <value>Exception</value>
  </data>
  <data name="ExceptionOccuredPleaseFillErrorReport" xml:space="preserve">
    <value>An internal exception has occured and the application has stopped working. Please fill out the error report and send it to the developer, so the Bug can get fixed.</value>
  </data>
  <data name="ExportProfileFilename" xml:space="preserve">
    <value>Filename</value>
  </data>
  <data name="ExportProfileIsNotExportable" xml:space="preserve">
    <value>Export profile is not exportable. Please check the validation errors and fix them in order to download the export.</value>
  </data>
  <data name="ExportProfileName" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="ExportProfiles" xml:space="preserve">
    <value>Export Profiles</value>
  </data>
  <data name="ExportProfileSchemeFooter" xml:space="preserve">
    <value>Scheme footer</value>
  </data>
  <data name="ExportProfileSchemeFooterValidationErrors" xml:space="preserve">
    <value>Export profile footer scheme validation errors</value>
  </data>
  <data name="ExportProfileSchemeHead" xml:space="preserve">
    <value>Scheme header</value>
  </data>
  <data name="ExportProfileSchemeHeadValidationErrors" xml:space="preserve">
    <value>Export profile head scheme validation errors</value>
  </data>
  <data name="ExportProfileSchemeTrack" xml:space="preserve">
    <value>Scheme tracks</value>
  </data>
  <data name="ExportProfileSchemeTrackValidationErrors" xml:space="preserve">
    <value>Export profile track scheme validation errors</value>
  </data>
  <data name="ExportResult" xml:space="preserve">
    <value>Export result</value>
  </data>
  <data name="HasInvalidBegin" xml:space="preserve">
    <value>Begin is not valid (must be equal or greater than 00:00:00). Please enter a valid time.</value>
  </data>
  <data name="HasInvalidEnd" xml:space="preserve">
    <value>End is not valid (must be equal or greater than 00:00:00). Please enter a valid time.</value>
  </data>
  <data name="HasInvalidValue" xml:space="preserve">
    <value>{0} has invalid value!</value>
  </data>
  <data name="HasNoValue" xml:space="preserve">
    <value>{0} has no value!</value>
  </data>
  <data name="Help" xml:space="preserve">
    <value>Help</value>
  </data>
  <data name="ImportCuesheetTooltip" xml:space="preserve">
    <value>Import a cuesheet file and extract all data from it</value>
  </data>
  <data name="ImportFiles" xml:space="preserve">
    <value>Import files</value>
  </data>
  <data name="ImportNotPossible" xml:space="preserve">
    <value>Import is not possible due to errors. Please check import errors!</value>
  </data>
  <data name="ImportOfFiles" xml:space="preserve">
    <value>Import of files</value>
  </data>
  <data name="ImportTextfileTooltip" xml:space="preserve">
    <value>Import a plain text file and extract data via regular expressions</value>
  </data>
  <data name="Introduction" xml:space="preserve">
    <value>Introduction</value>
  </data>
  <data name="WhatIsAudioCuesheetEditorText" xml:space="preserve">
    <value>&lt;strong&gt;AudioCuesheet&lt;/strong&gt; is a web application for writting audio cuesheet files. Audio cuesheet files are little text files which provide information about the provided audio file like artist, name, etc. AudioCuesheetEditor is an application that helps you writting valid cuesheet files by checking and validation input data. You can also import data from files to minimize your work.</value>
  </data>
  <data name="InvalidFile" xml:space="preserve">
    <value>Invalid file</value>
  </data>
  <data name="Length" xml:space="preserve">
    <value>Length</value>
  </data>
  <data name="LengthHasNoValue" xml:space="preserve">
    <value>Length has no value! Please check Begin and End.</value>
  </data>
  <data name="Licence" xml:space="preserve">
    <value>Licence</value>
  </data>
  <data name="MoveTrackDownTooltip" xml:space="preserve">
    <value>Move this track one position down</value>
  </data>
  <data name="MoveTrackUpTooltip" xml:space="preserve">
    <value>Move this track one position up</value>
  </data>
  <data name="Notifications" xml:space="preserve">
    <value>Notifications</value>
  </data>
  <data name="OnceYouSubmitTheErrorReport" xml:space="preserve">
    <value>Once you submit the error report, you will get redirected to formspree.io. This is normal, since the error report will get send by them. Afterwards you can go back in browser history and use the application again. Thanks for your help!</value>
  </data>
  <data name="OpenExportProfilesDialog" xml:space="preserve">
    <value>Display Export Profiles</value>
  </data>
  <data name="PlayNextTrackTooltip" xml:space="preserve">
    <value>Jump playback position to next track beginning</value>
  </data>
  <data name="PlayPreviousTrackTooltip" xml:space="preserve">
    <value>Jump playback position to previous track beginning</value>
  </data>
  <data name="PleaseCheckProcessingHints" xml:space="preserve">
    <value>Please check processing hints for errors. Otherwise the file is not exportable.</value>
  </data>
  <data name="Position" xml:space="preserve">
    <value>Position</value>
  </data>
  <data name="ProcessingHints" xml:space="preserve">
    <value>Processing hints</value>
  </data>
  <data name="QuickLinks" xml:space="preserve">
    <value>Quick links</value>
  </data>
  <data name="Reset" xml:space="preserve">
    <value>Reset</value>
  </data>
  <data name="ResetCuesheet" xml:space="preserve">
    <value>Reset cuesheet</value>
  </data>
  <data name="RestartCompleteApplication" xml:space="preserve">
    <value>Restart complete application</value>
  </data>
  <data name="SchemeContainsPlaceholdersThatCanNotBeSolved" xml:space="preserve">
    <value>Scheme contains placeholder that can not be resolved!</value>
  </data>
  <data name="SelectExportProfile" xml:space="preserve">
    <value>Select export profile</value>
  </data>
  <data name="SelectPlaceholder" xml:space="preserve">
    <value>Select placeholder</value>
  </data>
  <data name="Send" xml:space="preserve">
    <value>Send</value>
  </data>
  <data name="StartPlaybackThisTrack" xml:space="preserve">
    <value>Start playing this track</value>
  </data>
  <data name="StartTrackImport" xml:space="preserve">
    <value>Start import of tracks</value>
  </data>
  <data name="Textfile" xml:space="preserve">
    <value>Textfile</value>
  </data>
  <data name="TextImportAssistance" xml:space="preserve">
    <value>Import textfile assistant</value>
  </data>
  <data name="TextImportScheme" xml:space="preserve">
    <value>Import Textscheme</value>
  </data>
  <data name="Title" xml:space="preserve">
    <value>Title</value>
  </data>
  <data name="TrackHasInvalidValue" xml:space="preserve">
    <value>Track {0} has invalid Value {1} ({2})!</value>
  </data>
  <data name="TrackTableControls" xml:space="preserve">
    <value>Controls</value>
  </data>
  <data name="Version" xml:space="preserve">
    <value>Version</value>
  </data>
  <data name="Warning" xml:space="preserve">
    <value>Warning</value>
  </data>
  <data name="Warnings" xml:space="preserve">
    <value>Warnings</value>
  </data>
  <data name="WhatIsAudioCuesheetEditor" xml:space="preserve">
    <value>What is AudioCuesheetEditor?</value>
  </data>
  <data name="WrittenBy" xml:space="preserve">
    <value>Written by Sven Baus (&lt;a href='mailto&amp;#58;%73&amp;#46;ba&amp;#117;%7386%4&amp;#48;g&amp;#37;6D%78&amp;#46;ne%&amp;#55;4'&gt;s&amp;#46;baus8&amp;#54;&amp;#64;&amp;#103;mx&amp;#46;net&lt;/a&gt;)</value>
  </data>
  <data name="YouDroppedAFileThatCanNotBeProcessed" xml:space="preserve">
    <value>You selected or dropped a file ("{0}") that can not be processed. Please select only valid files (Textfiles, Cuesheets, Audiofiles)!</value>
  </data>
  <data name="YourEmailAddress" xml:space="preserve">
    <value>Your emailaddress (optional)</value>
  </data>
  <data name="CreateCuesheetText" xml:space="preserve">
    <value>Creation of Cuesheet can be done very easily and fast using the standard GUI without import of files. To do so, enter the CD artist and CD title in the appropriate fields. Also select an audio file on your computer by draging the file from file explorer to the drop zone or manually selecting the file via file chooser. &lt;br /&gt;&lt;img src="images/CreateCuesheet1.png"/&gt;&lt;br/&gt;Afterwards you need to insert a track by clickin the "Add new track" button. A new track is added and you can edit its properties like Artist, Title or Begin, End or Length. Please keep in mind, that every tracks begin gets calculated from the end of the previous track. Therefore its adviced to edit one track and fill its data before adding a new one.&lt;br /&gt;&lt;img src="images/CreateCuesheet2.png"/&gt;&lt;br/&gt;When you have added all tracks from the audio file and filled all necessary fields, you can export the cuesheet in the top by clickin "Export result" and then "Download cuesheet file". You can also export the result in other formats like XML, CSV or text by clicking "Export result" and then "Display Export Profilfes".&lt;br/&gt;&lt;img src="images/CreateCuesheet3.png"/&gt;</value>
  </data>
  <data name="Features" xml:space="preserve">
    <value>Features</value>
  </data>
  <data name="FeaturesText" xml:space="preserve">
    <value>&lt;ul&gt;&lt;li&gt;Validation for all data&lt;/li&gt;&lt;li&gt;Textimport&lt;/li&gt;&lt;li&gt;Cuesheet import&lt;/li&gt;&lt;li&gt;Different export profiles (XML/CSV,Text, etc)&lt;/li&gt;&lt;li&gt;Audio playback&lt;/li&gt;&lt;li&gt;Live record mode&lt;/li&gt;&lt;/ul&gt;</value>
  </data>
  <data name="Validation" xml:space="preserve">
    <value>Validation</value>
  </data>
  <data name="ValidationText" xml:space="preserve">
    <value>AudioCuesheetEditor works with a validation model and evaluates every input. Currently there are 2 types of validation: Warning and Error. Warnings are validationmessages, that might be important for you, but don't block functions. Errors are validationmessages that need to be corrected (like tracks with invalid times). Validation messages are displayed on the right with link to the corresponding field.&lt;br/&gt;&lt;img src="images/Validation1.png"/&gt;&lt;br/&gt;Each message can be clicked to jump to the corresponding field and correct the field.&lt;br/&gt;&lt;img src="images/Validation2.png"/&gt;</value>
  </data>
  <data name="ImportOfCuesheetFiles" xml:space="preserve">
    <value>Import of cuesheet files</value>
  </data>
  <data name="ImportOfTextFiles" xml:space="preserve">
    <value>Import of text files</value>
  </data>
  <data name="ImportOfTextFilesText" xml:space="preserve">
    <value>You can import plain text files and analyse the content of each line by simple regular expressions. A simple sample textfile can be found &lt;a href="/samples/Sample_Inputfile.txt" target="_blank"&gt;here&lt;/a&gt;.&lt;br/&gt;&lt;img src="images/SampleInputfile1.png"/&gt;&lt;br/&gt;Each line represents a track and every detail can be extracted from the line. First information that can be found is the track artist, followed by " - " and then track title. Afterwards some tabs come and you can see information about the track end time. So in this example we can work with the regular expression "%Artist% - %Title%[\t]{1,}%End%". Each field of track can be accessed via "%Fieldname%". You can start importing a textfile by dragging it from the file system to the dropzone or by manually selecting it from file chooser dialog.&lt;br/&gt;&lt;img src="images/ImportTextfile1.png"/&gt;&lt;br/&gt;A new dialog will appear where you can see the result of import and can edit the regular expression for import to your favor to match all the details you have in the textfile.&lt;br/&gt;&lt;img src="images/ImportTextfile2.png"/&gt;&lt;br/&gt;Changing the import textscheme will result in changes of the import result and the data to import will be shown to you.&lt;br/&gt;&lt;img src="images/ImportTextfile3.png"/&gt;&lt;br/&gt;You can select the valid track fields by pressing the button "Select placeholder" and afterwards selecting the placeholder you want to add:&lt;br/&gt;&lt;img src="images/ImportTextfile4.png"/&gt;&lt;br/&gt;If you enter an invalid text import scheme, that doesn't match the text file, an error will be displayed to you:&lt;br/&gt;&lt;img src="images/ImportTextfile5.png"/&gt;&lt;br/&gt;Errors will always block import of text, so you have to correct them at first before import can take place. Afterwards you can import the textfile and see the result.&lt;br/&gt;&lt;img src="images/ImportTextfile6.png"/&gt;&lt;br/&gt;&lt;img src="images/ImportTextfile7.png"/&gt;&lt;br/&gt;</value>
  </data>
  <data name="ImportOfCuesheetFilesText" xml:space="preserve">
    <value>You can import already finished cuesheets and edit them. It doesn't matter if the cuesheet is written by this program or another one. Only the format of file matters. To import a cuesheet, simply drag it from your file system to the dropzone or manually select it via file system chooser:&lt;br/&gt;&lt;img src="images/ImportCuesheet1.png"/&gt;&lt;br/&gt;A confirmation will be required, since all of the exisiting data will be replaced.&lt;br/&gt;&lt;img src="images/ImportCuesheet2.png"/&gt;&lt;br/&gt;Confirming this dialog will import the cuesheet and afterwards display the result.&lt;br/&gt;&lt;img src="images/ImportCuesheet3.png"/&gt;&lt;br/&gt;A sample cuesheet file can be found &lt;a href="samples/Sample_Cuesheet.cue" target="_blank"&gt;here&lt;/a&gt;.</value>
  </data>
  <data name="ScrollToTop" xml:space="preserve">
    <value>Scroll to top</value>
  </data>
  <data name="CuesheetfileImport" xml:space="preserve">
    <value>Import of Cuesheet</value>
  </data>
  <data name="Error" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="FileHasInvalidMimeType" xml:space="preserve">
    <value>The file "{0}" you supplied does not match the requested operation: "{1}". Please provide a valid file!</value>
  </data>
  <data name="Ok" xml:space="preserve">
    <value>Okay</value>
  </data>
  <data name="TextfileImport" xml:space="preserve">
    <value>Textfile import</value>
  </data>
  <data name="CDTextfile" xml:space="preserve">
    <value>CD Textfile</value>
  </data>
  <data name="CatalogueNumber" xml:space="preserve">
    <value>Catalogue number</value>
  </data>
  <data name="CataloguenumberContainsNonDigits" xml:space="preserve">
    <value>Cataloguenumber contains non digits.</value>
  </data>
  <data name="EnterCatalogueNumberHere" xml:space="preserve">
    <value>Enter the catalogue number of the cuesheet. Catalogue number is a 13 decimal digits number.</value>
  </data>
  <data name="HasInvalidLength" xml:space="preserve">
    <value>{0} has invalid length({1})!</value>
  </data>
  <data name="Filename" xml:space="preserve">
    <value>Filename:</value>
  </data>
  <data name="ConfirmResetOfApplication" xml:space="preserve">
    <value>Please confirm, that you want to reset the whole application. All data will be reset and the application will be reloaded. Every unchanged data will be lost!</value>
  </data>
  <data name="Options" xml:space="preserve">
    <value>Options</value>
  </data>
  <data name="ResetCompleteApplication" xml:space="preserve">
    <value>Reset complete application</value>
  </data>
  <data name="CuesheetFileName" xml:space="preserve">
    <value>Cuesheet filename</value>
  </data>
  <data name="ReloadOptions" xml:space="preserve">
    <value>Reload options</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="HasInvalidCount" xml:space="preserve">
    <value>{0} has invalid Count ({1})!</value>
  </data>
  <data name="Tracks" xml:space="preserve">
    <value>Tracks</value>
  </data>
  <data name="Files" xml:space="preserve">
    <value>Files (optional)</value>
  </data>
  <data name="ValidationDescription" xml:space="preserve">
    <value>Here all validation messages will be displayed. Each message contains a reference to the corresponding field and can be clicked to enter the field.</value>
  </data>
  <data name="Log" xml:space="preserve">
    <value>Log</value>
  </data>
  <data name="RecordControl" xml:space="preserve">
    <value>Control recording</value>
  </data>
  <data name="StartRecording" xml:space="preserve">
    <value>Start recording</value>
  </data>
  <data name="StopRecording" xml:space="preserve">
    <value>Stop recording</value>
  </data>
  <data name="SwitchViewMode" xml:space="preserve">
    <value>Switch view mode</value>
  </data>
  <data name="ViewModeFull" xml:space="preserve">
    <value>Full edition</value>
  </data>
  <data name="ViewModeRecord" xml:space="preserve">
    <value>Record mode</value>
  </data>
  <data name="DefaultViewMode" xml:space="preserve">
    <value>Default view mode</value>
  </data>
  <data name="RecordRunning" xml:space="preserve">
    <value>Record is running!</value>
  </data>
  <data name="EnterNewTrack" xml:space="preserve">
    <value>Enter new Track</value>
  </data>
  <data name="RecordNotPossibleWithExistingTracks" xml:space="preserve">
    <value>The cuesheet already contains tracks. Recording is not possible when there are tracks present in the cuesheet. Please save your work and start with a clean cuesheet.</value>
  </data>
  <data name="DownloadRecordedAudio" xml:space="preserve">
    <value>Download recorded audio file</value>
  </data>
  <data name="RecordMode" xml:space="preserve">
    <value>Live record mode</value>
  </data>
  <data name="RecordModeHelpText" xml:space="preserve">
    <value>AudioCuesheetEditor has different view modes you can use for different scopes. Record mode has the focus on live recording a cuesheet and tracks with a soundfile you can download afterwards. To use the record mode switch the view mode to record mode.&lt;br/&gt;&lt;img src="images/RecordMode1.png"/&gt;&lt;br/&gt;You will be asked if you want to allow using audio input. In case you want to have the audio recorded select "Allow". This is optional, but keep in mind, that if you block access to audio, no audio will be recorded by AudioCuesheetEditor. You can afterwards start your recording by pressing the "Start recording" Button. This causes the record to start and a display will tell you, that you are currently recording.&lt;br/&gt;&lt;img src="images/RecordMode2.png"/&gt;&lt;br/&gt;Play audio and once the end of the track has been reached, please enter the track artist and title and click the button "Add new track". This will set the end of the track to the current time. You can use "Enter" on the input fields to fast switch the focus inputs and enter the new track.&lt;br/&gt;&lt;img src="images/RecordMode3.png"/&gt;&lt;br/&gt;Once you have entered a track, it will display in the tracks and you can edit artist and title again and also delete the track afterwards.&lt;br/&gt;&lt;img src="images/RecordMode4.png"/&gt;&lt;br/&gt;Once you have finished your recording, click the button "Stop recording" which will stop the recording and make the recording (if audio is not blocked) downloadable to you. &lt;br/&gt;&lt;img src="images/RecordMode5.png"/&gt;&lt;br/&gt;You can now switch back to full edit mode in order to do more editing on the cuesheet. All tracks are present and also the recording is available as download in the cuesheet data part.</value>
  </data>
  <data name="EditTrack" xml:space="preserve">
    <value>Edit track details</value>
  </data>
  <data name="EditTrackTooltip" xml:space="preserve">
    <value>Edit track details in a dialog</value>
  </data>
  <data name="Flag4CHTooltip" xml:space="preserve">
    <value>Set this if track contains four channel audio</value>
  </data>
  <data name="FlagDCPTooltip" xml:space="preserve">
    <value>Set this if track is digital copy permitted</value>
  </data>
  <data name="FlagPRETooltip" xml:space="preserve">
    <value>Set this if track has Pre-emphasis enabled</value>
  </data>
  <data name="Flags" xml:space="preserve">
    <value>Flags</value>
  </data>
  <data name="FlagSCMSTooltip" xml:space="preserve">
    <value>Set this if track has "Serial Copy Management System"</value>
  </data>
  <data name="CopyTrackTooltip" xml:space="preserve">
    <value>Copy this track with all values and attach it to the cuesheet.</value>
  </data>
  <data name="PositionAlreadyInUse" xml:space="preserve">
    <value>Position {0} of this track is already in use by track(s) {1}!</value>
  </data>
  <data name="TimeIsOverlapping" xml:space="preserve">
    <value>{0} is overlapping with other tracks ({1})!</value>
  </data>
  <data name="PostGap" xml:space="preserve">
    <value>Postgap</value>
  </data>
  <data name="PreGap" xml:space="preserve">
    <value>Pregap</value>
  </data>
</root>